class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        area = 0
        def dfs(matrix,x,y,k,m,n):
            a = 0
            if x < 0 or y < 0 or x>= m or y >= n or matrix[x][y] == 0:
                return 1
            if matrix[x][y] == 3:
                return 0
            matrix[x][y] = 3
            return (dfs(matrix,x+1,y,k,m,n)+
            dfs(matrix,x-1,y,k,m,n)+
            dfs(matrix,x,y-1,k,m,n)+
            dfs(matrix,x,y+1,k,m,n))
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1:
                    area = dfs(grid,i,j,0,m,n)
                    #area = tmp
                    
        return area
